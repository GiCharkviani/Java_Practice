{"ast":null,"code":"import { tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nexport class AppComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.title = 'todoList';\n    this.myForm = this.formBuilder.group({\n      firstname: [],\n      lastname: [],\n      email: [],\n      password: [],\n      image: []\n    });\n  }\n\n  submit() {\n    const formData = new FormData();\n    const entries = Object.entries(this.myForm.getRawValue());\n    entries.forEach(([key, value]) => formData.append(key, value || ''));\n    this.http.post('http://localhost:8080/auth/register', formData).subscribe(data => console.log(data));\n  }\n\n  onFileSelected(event) {\n    console.log(event.target.files);\n    this.myForm.get('image')?.setValue(event.target.files[0]);\n  }\n\n  get userData() {\n    return this.http.get('http://localhost:8080/user').pipe(tap(data => console.log(data)));\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"autocomplete\", \"\"], [\"type\", \"text\", \"formControlName\", \"lastname\", \"autocomplete\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", \"autocomplete\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\", 1, \"Register\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2)(3, \"input\", 3)(4, \"input\", 4);\n      i0.ɵɵelementStart(5, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_5_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"hr\");\n      i0.ɵɵelementStart(8, \"input\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_8_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, AppComponent_ng_container_9_Template, 1, 0, \"ng-container\", 7);\n      i0.ɵɵpipe(10, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 2, ctx.userData));\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAGA,SAAoBA,GAApB,QAA8B,MAA9B;;;;;;;;ICSAC;;;;ADDA,OAAM,MAAOC,YAAP,CAAmB;EAUvBC,YAA6BC,IAA7B,EAAgEC,WAAhE,EAAwF;IAA3D;IAAmC;IAThE,aAAQ,UAAR;IACO,cAAS,KAAKA,WAAL,CAAiBC,KAAjB,CAAuB;MACrCC,SAAS,EAAE,EAD0B;MAErCC,QAAQ,EAAE,EAF2B;MAGrCC,KAAK,EAAE,EAH8B;MAIrCC,QAAQ,EAAE,EAJ2B;MAKrCC,KAAK,EAAE;IAL8B,CAAvB,CAAT;EASN;;EAEMC,MAAM;IACX,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACA,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,KAAKE,MAAL,CAAYC,WAAZ,EAAf,CAAhB;IACAH,OAAO,CAACI,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAiCR,QAAQ,CAACS,MAAT,CAAgBF,GAAhB,EAAqBC,KAAK,IAAI,EAA9B,CAAjD;IACA,KAAKjB,IAAL,CAAUmB,IAAV,CAAe,qCAAf,EAAsDV,QAAtD,EAAgEW,SAAhE,CAA2EC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAApF;EACD;;EAEDG,cAAc,CAACC,KAAD,EAAW;IACvBH,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;IACA,KAAKd,MAAL,CAAYe,GAAZ,CAAgB,OAAhB,GAA0BC,QAA1B,CAAmCJ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAnC;EACD;;EAEkB,IAARG,QAAQ;IACjB,OAAO,KAAK9B,IAAL,CAAU4B,GAAV,CAAc,4BAAd,EAA4CG,IAA5C,CAAiDnC,GAAG,CAACyB,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAT,CAApD,CAAP;EACD;;AA3BsB;;;mBAAZvB,cAAYD;AAAA;;;QAAZC;EAAYkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzBvC;MACIA,4BAA4D,CAA5D,EAA4D,OAA5D,EAA4D,CAA5D,EAA4D,CAA5D,EAA4D,OAA5D,EAA4D,CAA5D,EAA4D,CAA5D,EAA4D,OAA5D,EAA4D,CAA5D;MAIAA;MAAmBA;QAAA,OAAUwC,0BAAV;MAAgC,CAAhC;MAAnBxC;MACAA,sBAAI,CAAJ,EAAI,IAAJ;MAEAA;MAAqBA;QAAA,OAASwC,YAAT;MAAiB,CAAjB;MAArBxC;MAIJA;;;;;MAZMA;MAYSA;MAAAA","names":["tap","i0","AppComponent","constructor","http","formBuilder","group","firstname","lastname","email","password","image","submit","formData","FormData","entries","Object","myForm","getRawValue","forEach","key","value","append","post","subscribe","data","console","log","onFileSelected","event","target","files","get","setValue","userData","pipe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/giorgi.charkviani/Desktop/Learning/Java/Java_Practice/Projects/todo_list/todo-list-frontend/src/app/app.component.ts","/Users/giorgi.charkviani/Desktop/Learning/Java/Java_Practice/Projects/todo_list/todo-list-frontend/src/app/app.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormBuilder} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, tap} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'todoList';\n  public myForm = this.formBuilder.group({\n    firstname: [],\n    lastname: [],\n    email: [],\n    password: [],\n    image: [],\n  })\n\n  constructor(private readonly http: HttpClient, private readonly formBuilder: FormBuilder) {\n  }\n\n  public submit() {\n    const formData = new FormData();\n    const entries = Object.entries(this.myForm.getRawValue())\n    entries.forEach(([key, value]: [string, any]) => formData.append(key, value || ''))\n    this.http.post('http://localhost:8080/auth/register', formData).subscribe((data) => console.log(data))\n  }\n\n  onFileSelected(event: any) {\n    console.log(event.target.files)\n    this.myForm.get('image')?.setValue(event.target.files[0]);\n  }\n\n  public get userData(): Observable<any> {\n    return this.http.get('http://localhost:8080/user').pipe(tap(data => console.log(data)))\n  }\n}\n","<form [formGroup]=\"myForm\">\n    <input type=\"text\" formControlName=\"firstname\" autocomplete>\n    <input type=\"text\" formControlName=\"lastname\" autocomplete>\n    <input type=\"text\" formControlName=\"email\" autocomplete>\n    <input type=\"password\" formControlName=\"password\" autocomplete=\"current-password\">\n    <input type=\"file\" (change)=\"onFileSelected($event)\" >\n    <br>\n    <hr>\n    <input type=\"submit\" (click)=\"submit()\" class=\"Register\">\n</form>\n\n\n<ng-container *ngIf=\"(userData | async) as user\">\n<!--    <p>User name: {{user.username}}</p>-->\n</ng-container>\n"]},"metadata":{},"sourceType":"module"}